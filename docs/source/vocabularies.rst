Vocabularies
============

Vocabularies are utilities containing a list of values grouped by interest or
different Plone features. For example,
``plone.app.vocabularies.ReallyUserFriendlyTypes`` will return all the content
types registered in Plone. The vocabularies return a list of objects with the
items ``@id``, ``title`` and ``token``.

.. note::
	These docs are generated by code tests, therefore you will see some 'test' contenttypes appear here.

Get all vocabularies
--------------------

To get a list of all the available content types, you can query using a GET to the @vocabulary endpoint:

..  http:example:: curl httpie python-requests
    :request: _json/vocabularies.req

The response will include a list with all the dotted names of the available
vocabularies in Plone.

.. literalinclude:: _json/vocabularies.resp
   :language: http

Get a vocabulary
----------------

To get a particular vocabulary, use the ``/@vocabularies`` endpoint
with the name of the vocabulary, e.g.
``/plone/@vocabularies/plone.app.vocabularies.ReallyUserFriendlyTypes``. The
endpoint can be used with the site root and content objects.

..  http:example:: curl httpie python-requests
    :request: _json/vocabularies_get.req

The server will respond with a list of terms. The title is purely for display purposes.
The token is what should be sent to the server to retrieve the value of the term.

.. note::
    Vocabulary terms will be **batched** if the size of the
    resultset exceeds the batch size. See :doc:`/batching` for more
    details on how to work with batched results.

.. literalinclude:: _json/vocabularies_get.resp
   :language: http

Vocabulary terms can be filtered using a `q` parameter
to return only terms with a title that contains the specified text
(case insensitive).

.. http:example:: curl httpie python-requests
    :request: _json/vocabularies_get_filtered.req

.. literalinclude:: _json/vocabularies_get_filtered.resp
   :language: http
